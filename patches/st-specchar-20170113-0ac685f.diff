diff --git a/st.c b/st.c
index 7c7ddff..6164588 100644
--- a/st.c
+++ b/st.c
@@ -60,6 +60,7 @@ char *argv0;
 #define ISDELIM(u)		(utf8strchr(worddelimiters, u) != NULL)
 
 /* constants */
+#define SPECCHARCMD		"listspecchars | dmenu -w %lu -l 10 -p 'special character':"
 #define ISO14755CMD		"dmenu -w %lu -p codepoint: </dev/null"
 
 enum cursor_movement {
@@ -135,6 +136,7 @@ static void zoomabs(const Arg *);
 static void zoomreset(const Arg *);
 static void printsel(const Arg *);
 static void printscreen(const Arg *) ;
+static void specchar(const Arg *);
 static void iso14755(const Arg *);
 static void toggleprinter(const Arg *);
 static void sendbreak(const Arg *);
@@ -1990,6 +1992,47 @@ tprinter(char *s, size_t len)
 	}
 }
 
+void
+specchar(const Arg *arg)
+{
+	unsigned long id = xwinid();
+	char cmd[sizeof(SPECCHARCMD) + NUMMAXLEN(id)];
+	FILE *p;
+   const char s[2] = ":";
+	char *us, specstring[100], *token, *end;
+
+	snprintf(cmd, sizeof(cmd), SPECCHARCMD, id);
+	if (!(p = popen(cmd, "r")))
+		return;
+
+	us = fgets(specstring, sizeof(specstring), p);
+
+	pclose(p);
+
+	if (!us || *us == '\0' || *us == '\n' || strlen(us) > 98 || strlen(us) < 2)
+		return;
+   /* clean trailing whitespace */
+   end = us + strlen(us) -1;
+   while(end > us && isspace((unsigned char)*end)) end--;
+   *(end+1) = 0;
+
+	if (!us || *us == '\0' || *us == '\n' || strlen(us) > 98 || strlen(us) < 2)
+		return;
+
+   token = strtok(us, s);
+   token = strtok(NULL, s);
+
+   /* clean whitespace */
+   while(isspace((unsigned char)*token)) token++;
+   if (*token == 0)
+      return;
+   end = token + strlen(token) -1;
+   while(end > token && isspace((unsigned char)*end)) end--;
+   *(end+1) = 0;
+
+	ttysend(token, strlen(token));
+}
+
 void
 iso14755(const Arg *arg)
 {
